name: Build & Release (Windows)

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        shell: bash
        run: |
          if [ -f "DIM-Creator.spec" ]; then
            pyinstaller -y DIM-Creator.spec
          else
            pyinstaller app.py \
              --noconfirm --onefile --noconsole \
              --name DIM-Creator \
              --add-data "assets;assets" \
              --icon "assets/images/logo/x128.ico" \
              --hidden-import qfluentwidgets
          fi

      # ZIP inkl. README & LICENSE erstellen; EXE-Name bleibt "DIM-Creator.exe"
      - name: Prepare release bundle (zip + docs)
        shell: pwsh
        run: |
          $ver = $env:GITHUB_REF_NAME
          if (-not $ver) { $ver = "dev-$($env:GITHUB_SHA.Substring(0,7))" }

          if (-not (Test-Path "dist/DIM-Creator.exe")) {
            throw "dist/DIM-Creator.exe nicht gefunden (Build fehlgeschlagen oder Pfad anders?)."
          }

          # README & LICENSE in dist/ bereitstellen (falls vorhanden)
          if (Test-Path "README.md") { Copy-Item -Force "README.md" "dist/README.md" }
          if (Test-Path "LICENSE")   { Copy-Item -Force "LICENSE"   "dist/LICENSE" }

          # ZIP bauen
          $zipPath = "dist/DIM-Creator_${ver}_win-x64.zip"
          if (Test-Path $zipPath) { Remove-Item $zipPath -Force }

          $zipSources = @("dist/DIM-Creator.exe")
          if (Test-Path "dist/README.md") { $zipSources += "dist/README.md" }
          if (Test-Path "dist/LICENSE")   { $zipSources += "dist/LICENSE" }

          Compress-Archive -Path $zipSources -DestinationPath $zipPath -Force

          Write-Host "ZIP erstellt: $zipPath"
          Get-ChildItem dist | Format-Table -AutoSize

      - name: Upload artifact (CI)
        uses: actions/upload-artifact@v4
        with:
          name: dim-creator-windows
          path: |
            dist/DIM-Creator.exe
            dist/*.zip
          if-no-files-found: error

      - name: Attach to Release (on tags)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/DIM-Creator.exe
            dist/*.zip
          generate_release_notes: true
